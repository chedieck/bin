#!/bin/sh

LC_NUMERIC="en_US.UTF-8"

# Usage:
#	price <url> <Name of currency> <Price to show in>
#	price bat "Basic Attention Token"
# When the name of the currency is multi-word, put it in quotes.

[ -z "$2" ] && exit 1

is_small=0

# use $4 as currency, if not passed in use "usd" as default
currency="${4:-usd}"
interval="@14d"	# History contained in chart preceded by '@' (7d = 7 days)
dir="${XDG_DATA_HOME:-$HOME/.local/share}/crypto-prices"
pricefile="$dir/$1-$currency"
chartfile="$dir/$1-$currency-chart"

updateprice() { temp="$(mktemp)"
	curl -s "$currency.rate.sx/1$1" > "$temp" &&
		mv -f "$temp" "$pricefile" &&
		curl -s "$currency.rate.sx/$1$interval" > "$temp" &&
		mv -f "$temp" "$chartfile" ;}

[ -d "$dir" ] || mkdir -p "$dir"

updateprice "$1"

case $BLOCK_BUTTON in
	1) setsid "$TERMINAL" -e less -Srf "$chartfile" ;;
	2) notify-send -u low "Updating..." "Updating $2 price..."
		updateprice "$1" && notify-send "Update complete." "$2 price is now
\$$(cat "$pricefile")" ;;
	3) uptime="$(date -d "$(stat -c %x "$pricefile")" '+%D at %T' | sed "s|$(date '+%D')|Today|")"
		notify-send "$2 module" "\- <b>Exact price: \$$(cat "$pricefile")</b>
- Left click for chart of changes.
- Middle click to update.
- Shows ðŸ”ƒ if updating prices.
- <b>Last updated:
	$uptime</b>" ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

case "$1" in
	xec) is_small=1;;
esac

if [ "$is_small" -eq 0 ]
then
	printf "%0.2f" "$(cat "$pricefile")"
else
	sats=$(sed 's/e-.*//' "$pricefile")
	value=$(echo "scale=10; ($sats * 10^(-5)) * 10^8" | bc | awk '{printf "%.0f\n", $1}')
	printf "%0.0f" "$value"
fi
